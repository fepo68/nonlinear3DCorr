function G = mlpKernGradientK(kern, x)

% MLPKERNGRADIENTK Gradient of multi-layer perceptron kernel's parameters.

[k, innerProd, arg, denom, numer] = mlpKernCompute(kern, x);
denom3 = denom.*denom.*denom;
vec = diag(innerProd);
base = kern.variance./sqrt(1-arg.*arg);

G{1} = (innerProd./denom ...
        -.5*numer./denom3...
        .*((kern.weightVariance.*vec+kern.biasVariance+1)*vec' ...
           + vec*(kern.weightVariance.*vec+kern.biasVariance+1)'));

G{2} = (1./denom ...
                 -.5*numer./denom3 ...
                 .*(repmat(vec, 1, size(vec, 1))*kern.weightVariance...
                    + 2*kern.biasVariance + 2 ...
                    +repmat(vec', size(vec, 1), 1)*kern.weightVariance));
 
G{3} = k/kern.variance;
G{1} = G{1}.*base;
G{2} = G{2}.*base;
